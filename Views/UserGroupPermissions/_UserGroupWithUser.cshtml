@model IEnumerable<PartsIq.Models.UserGroupViewModel>

@{
    ViewBag.Title = "User Groups";
}

<div class="col-sm-4">
    <div class="card">
        <div class="card-body">
            <div class="">
                <div class="nav flex-column nav-pills nav-pills-tab" id="usergroup-pills-tab" role="tablist" aria-orientation="vertical">
                    <a class="nav-link mb-1 fw-bolder" data-group-id="0" data-bs-toggle="pill" href="#" role="tab">
                        All Users
                    </a>
                    @foreach (var group in Model)
                    {
                        <a class="nav-link mb-1 mx-3 fw-bolder" data-group-id="@group.UserGroupId" data-bs-toggle="pill" href="#" role="tab">
                            @group.Name
                        </a>
                    }
                    @*<a class="nav-link mb-1 fw-bolder" data-group-id="null" data-bs-toggle="pill" href="#" role="tab">
                        No Group Users
                    </a>*@
                </div>
            </div>
        </div>
    </div>
    
   
</div>

<div class="col-sm-8">
    <div class="tab-content" id="usergroup-pills-tabContent">
        <div class="tab-pane fade show active" id="v-pills-home" role="tabpanel" aria-labelledby="v-pills-home-tab">
            
                <table class="table table-hover table-centered dt-responsive nowrap w-100 fs-14" id="userTable">
                    <thead class="table-light">
                        <tr>
                            <th>Username</th>
                            <th>Name</th>
                            <th>Email</th>
                            <th>User Group</th>
                            <th>Status</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                </table>
                @*@Html.Partial("_UserList", new List<PartsIq.Models.UserViewModel>())*@
          
        </div>
    </div>
</div>

<script>
    $(document).ready(function (e) {

        let nav = $(document).find('.nav-link[aria-selected="false"]').data("group-id");
        nav = (typeof nav !== 'undefined') ? nav : 0;
       
            $('#userTable').DataTable({
                ajax: {
                        url: '@Url.Action("GetUsersInGroup", "UserGroupPermissions")',
                        data: { groupId: nav }, // Data sent to the server
                        dataSrc: 'data' // This points to the key in the server response where the data is stored (adjust if needed)
                    },
                lengthChange: !1,
                language: {
                    paginate:
                    {
                        previous: "<i class='bx bx-chevron-left'>", next: "<i class='bx bx-chevron-right'>"
                    },
                    info: "Showing customers _START_ to _END_ of _TOTAL_", lengthMenu: 'Display <select class=\'form-select form-select-sm ms-1 me-1\'><option value="10">10</option><option value="20">20</option><option value="50">50</option><option value="100">100</option><option value="-1">All</option></select> orders'
                }, pageLength: 10, dom: '<"row align-items-center" <"col-sm-4" l> <"col-sm-8" <"d-flex align-items-center justify-content-sm-end flex-wrap" f<"ms-0 ms-sm-3" B>>> ><"row" <"col-12"Tgt>> <"row align-items-center" <"col-md-6"i> <"col-md-6"p> >',
                order: [],
                columns: [
                    { data: "Username", },
                    { data: "Name", },
                    { data: "Email", },
                    { data: "UserGroup", },
                    {
                        data: "Status",
                        render: function (data, type, row, meata) {
                            if (row.Status == "Active") {
                                return `<span class="badge bg-success badge-pill ">Active</span>`;
                            } else if (row.Status == "InActive") {
                                return `<span class="badge bg-danger badge-pill">InActive</span>`;
                            }
                        }
                    },
                    {
                        data: "UserID",
                        render: function (data, type, row, meta) {
                            if (row.Status == "Active") {
                                return `
                    <div>
                            <button type="button" data-user-id="${data}" data-bs-toggle="modal" data-bs-target="#edit-user-modal" class="btn btn-sm btn-primary waves-effect waves-light" data-effect="wave">Edit</button>
                        <button type="button" data-status="1" data-user-id="${data}" data-bs-toggle="modal" data-bs-target="#user-status-modal" class="btn btn-sm btn-danger waves-effect waves-light btn-status" data-effect="wave">Deactivate</button>
                    </div> `
                            } else if (row.Status == "InActive") {
                                return `
                    <div>
                            <button type="button" data-user-id="${data}" data-bs-toggle="modal" data-bs-target="#edit-user-modal" class="btn btn-sm btn-primary waves-effect waves-light" data-effect="wave">Edit</button>
                        <button type="button" data-status="0" data-user-id="${data}" data-bs-toggle="modal" data-bs-target="#user-status-modal" class="btn btn-sm btn-success waves-effect waves-light btn-status" data-effect="wave">Activate</button>
                    </div> `
                            }

                        },
                    }
                ],
                drawCallback: function () {
                    e(".dataTables_paginate > .pagination").addClass("flat-rounded-pagination "), e(".dataTables_filter").find("label").addClass("search-box d-inline-flex position-relative"), e(".dataTables_filter").find(".form-control").attr("placeholder", "Search...")

                }
            });
            
        


       

    });
</script>

