@model PartsIq.Models.Checkpoint

<div class="page-content">
    <div class="row" id="mainContent">
        <div class="page-content">
            <!-- Title -->
            <div class="page-title-box">
                <div class="container-fluid">
                    <div class="page-title dflex-between-center">
                        <h3 class="mb-1 fw-bold">Edit Checkpoint</h3>
                        <ol class="breadcrumb mb-0 mt-1">
                            <li class="breadcrumb-item">
                                <a href="~/">
                                    <i class="bx bx-home fs-xs"></i>
                                </a>
                            </li>
                            <li class="breadcrumb-item active">Edit</li>
                        </ol>
                    </div>
                </div>
            </div>
            <div class="page-content-wrapper mt--45">
                <div class="container-fluid">
                    <div class="row">
                        <div class="col-lg-8 col-md-12">
                            <div class="card">
                                <div class="card-header">
                                </div>
                                <div class="card-body">
                                    <form id="checkpointEditForm">
                                        <div class="mb-3">
                                            <label for="Code" class="form-label">Code</label>
                                            <input type="text" class="form-control" id="Code" name="Code" value="@Model.Code">
                                            <input type="hidden" id="PartID" value="@Model.Part_ID" name="PartID">
                                            <input type="hidden" id="CheckpointID" value="@Model.CheckpointId" name="CheckpointID"/>
                                        </div>

                                        <div class="mb-3">
                                            <label for="InspectionPart" class="form-label">Inspection Part</label>
                                            <input type="text" class="form-control" id="InspectionPart" name="InspectionPart" value="@Model.InspectionPart">
                                        </div>

                                        <div class="d-flex mb-3 gap-4">
                                            <div>
                                                <label for="Specification" class="form-label">Specification</label>
                                                <input type="text" class="form-control" id="Specification" name="Specification" value="@Model.Specification">
                                            </div>
                                            <div>
                                                <label for="UpperLimit" class="form-label">Upper Limit</label>
                                                <input type="number" class="form-control" id="UpperLimit" name="UpperLimit" value="@Model.LimitUpper">
                                            </div>
                                            <div>
                                                <label for="LowerLimit" class="form-label">Lower Limit</label>
                                                <input type="number" class="form-control" id="LowerLimit" name="LowerLimit" value="@Model.LimitLower">
                                            </div>
                                        </div>


                                        <div class="mb-3">
                                            <p class="form-label">Measurement?</p>
                                            <div class="form-check custom-radio">
                                                <input class="form-check-input" type="radio" name="IsMeasurement" id="IsMeasurementT" value="true" @(Model.IsMeasurement ? "checked": "") />
                                                <label class="form-check-label" for="IsMeasurementT">True</label>
                                            </div>
                                            <div class="form-check custom-radio">
                                                <input class="form-check-input" type="radio" name="IsMeasurement" id="IsMeasurementF" value="false" @(!Model.IsMeasurement ? "checked": "")/>
                                                <label class="form-check-label" for="IsMeasurementF">False</label>
                                            </div>
                                        </div>

                                        <div class="mb-3">
                                            <label for="Tool" class="form-label">Tool</label>
                                            <input type="text" class="form-control" id="Tool" name="Tool" value="@Model.Tools">
                                        </div>
                                        <div class="mb-3">
                                            <label for="MethodSampling" class="form-label">Sampling Method</label>
                                            <input type="text" class="form-control" id="MethodSampling" name="MethodSampling" value="@Model.SamplingMethod">
                                        </div>
                                        <div class="mb-3">
                                            <label for="Note" class="form-label">Note</label>
                                            <input type="text" class="form-control" id="Note" name="Note" value="@Model.Note">
                                        </div>
                                        <button type="submit" class="btn btn-primary">Submit</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-12 order-md-first order-lg-last">
                            <div class="card">
                                <div class="card-header">
                                    <h5>Part Name: <b>@Model.Part.Name</b></h5>
                                    <p>Code: @Model.Part.Code</p>
                                    <p>Model: @Model.Part.Model</p>
                                </div>
                                <div class="card-body">
                                    <a href="~/Parts/Details/@Model.Part_ID" class="btn btn-secondary"><i class="mdi mdi-arrow-left-bold"></i> Back to details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        const checkpointForm = document.getElementById('checkpointEditForm');

        document.addEventListener('DOMContentLoaded', function () {
            checkpointForm.addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(checkpointForm);
                const { hasError: { status, message }, data } = formDataValidator(formData);
                if (status) {
                    alertify.error(message);
                    console.log(Object.fromEntries(data));
                } else {
                    $.ajax({
                        url: '/Checkpoints/EditCheckpoint',
                        method: 'POST',
                        data: Object.fromEntries(data),
                        success: (res) => {
                            if (res.success) {
                                alertify.success(res.message);
                            }
                            window.scroll({
                                top: 0,
                                left: 0,
                                behavior: 'smooth'
                            });
                            console.log(res);
                        },
                        error: (err) => {
                            console.log(err);
                        }
                    })
                }
            })
        });

        function formDataValidator(formData) {
            const data = new FormData();
            let hasError = { status: false, message: "" };
            formData.forEach((value, key) => {
                if (key === "SpecificationRange") value = value === '' ? "none" : value;
                if (key === "UpperLimit" || key === "LowerLimit") value = value === '' ? 0 : Number(value);
                data.append(key, value)   

                if (typeof value === "string") {
                    value = value.trim();
                    if (value === '') {
                        hasError.status = true;
                        hasError.message = "Avoid the use of white spaces ";
                    }
                    data.append(key, value);
                }
            });

            const upperLimit = Number(formData.get('UpperLimit'));
            const lowerLimit = Number(formData.get('LowerLimit'));

            if (upperLimit < lowerLimit) {
                hasError.status = true;
                hasError.message += "Upper limit cannot be lower than the Lower limit ";
            }


            return { hasError, data };
        }
        
    </script>
}