@model IEnumerable<PartsIq.Models.User>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="page-content">
    <!-- page header -->
    <div class="page-title-box">
        <div class="container-fluid">
            <div class="page-title dflex-between-center">
                <h3 class="mb-1 fw-bold">Users</h3>
                <ol class="breadcrumb mb-0 mt-1">
                    <li class="breadcrumb-item">
                        <a href="../index.html">
                            <i class="bx bx-home fs-xs"></i>
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <a href="ui-buttons.html">
                            Components
                        </a>
                    </li>
                    <li class="breadcrumb-item active">Accordian</li>
                </ol>
            </div>
        </div>
    </div>
    <!-- page content -->
    <div class="page-content-wrapper mt--45">
        <div class="container-fluid">
            <div class="row">
                <div class="col-lg-12">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="card-title">Accounts</h5>
                        </div>
                        <div class="card-body">
                            <div class="row" id="user-group-nav">
                            </div>
                        </div>
                    </div> <!-- end card-box-->
                </div> <!-- end col -->
            </div> <!-- end row -->
            <!-- end row -->
        </div>
    </div>
    <!-- main content End -->
</div>

<!-- Modals-->

<div id="edit-user-modal" class="modal fade" tabindex="-1" role="dialog"
     aria-labelledby="con-close-modal" aria-hidden="true" style="display: none;">
    <div class="modal-dialog">
        <div class="modal-content">
        </div>
    </div>
</div>

<div id="inactive-user-modal" class="modal fade" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-sm">
        <div class="modal-content modal-filled bg-danger">
            <div class="modal-body p-4">
                <div class="text-center">
                    <i class="bx bx-notification-off fs-xl text-white"></i>
                    <h4 class="mt-2 text-white">Oh snap!</h4>
                    <p class="mt-3 text-white">
                        Press continue to set User as Inactive.
                    </p>
                    <button type="button" class="btn btn-light my-2 inactive-btn" data-bs-dismiss="modal">Continue</button>
                    <button type="button" class="btn btn-secondary my-2" data-bs-dismiss="modal">Cancel</button>
                </div>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div><!-- /.modal -->
<!-- /.modal -->
@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsLoggedIN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Username)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserGroupPermission.Name)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsActive)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsLoggedIN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastUpdate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Password)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Username)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserGroupPermission.Name)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.UserId }) |
                    @Html.ActionLink("Details", "Details", new { id = item.UserId }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.UserId })
                </td>
            </tr>
        }

    </table>*@

@section scripts {

    <script>
        $(document).ready(function () {

            $.ajax({
                url: '@Url.Action("ViewUserGroup", "UserGroupPermissions")',
                method: 'GET',
                success: function (response) {
                    $('#user-group-nav').append(response);
                }
            });

        $(document).on("click", ".btn-primary[data-bs-target='#edit-user-modal']", function () {
            var userId = $(this).data("user-id");
                console.log(userId)
            $.ajax({
                url: '@Url.Action("GetUserEditForm", "Users")',
                data: { userId: userId },
                    type: 'GET',
                    success: function (data) {
                        $("#edit-user-modal .modal-content").html(data);
                        $("#edit-user-modal").modal("show");
                    },
                    error: function () {
                        alert("An error occurred while fetching the user details.");
                    }
                });
        });

            $(document).on("click", ".btn-danger[data-bs-target='#inactive-user-modal']", function () {
                let userID = $(this).data('user-id');
                $('.inactive-btn').attr("data-id", userID);

            });

            $(document).on('submit', '#edit-user-form', function () {
                alert('test');
            });

            $(document).on('click', '#edit-user-form-btn', function () {
                let formData = new FormData();

                // Collect form data
                let username = $("#Username").val().trim();
                let email = $("#Email").val().trim();
                let password = $("#Password").val().trim();
                let firstname = $("#FirstName").val().trim();
                let lastname = $("#LastName").val().trim();
                let usergroup = $('#UserGroup_ID').val();
                let userID = $('#UserId').val();

                // Append values to FormData
                formData.append("username", username);
                formData.append("email", email);
                formData.append("password", password);
                formData.append("firstname", firstname);
                formData.append("lastname", lastname);
                formData.append("usergroup", usergroup);
                formData.append("userID", userID);
                var token = $('input[name="__RequestVerificationToken"]').val();
                formData.append("__RequestVerificationToken", token);
                // AJAX request
                $.ajax({
                    url: '@Url.Action("EditUser", "Users")',
                    method: "POST",
                    data: formData,
                    processData: false, // Prevent jQuery from automatically processing the data
                    contentType: false, // Set to false to allow FormData to handle content type
                    success: function (response) {
                        alertify.success('Success.');
                        $('#edit-user-modal').modal("toggle");
                        var activeNavLink = $('.nav-link.active');
                        activeNavLink.trigger('click');
                       
                    },
                    error: function (err) {
                        alertify.error(`Error occurred: ${err.responseText}`);
                    }
                });
            });

            $(document).on('click', '.inactive-btn' , function () {
                let userID = $(this).data("id");
                $.ajax({
                    url: '@Url.Action("ChangeUserStatus", "Users")',
                    method: "POST",
                    data: {
                        userID: userID,
                        status : 0,
                    },
                    success: function (res) {
                        alertify.success("Success")
                    }, error: function (err) {
                        alertify.error(`Error ${err} error occured.`)
                    }
                });
            });



        });
    </script>
}